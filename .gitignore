## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates
CS.SPS.Services.Client.dll.config

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
packages/
/Debug/
/Obj/
# Build results
[Bb]in/
[Oo]bj/
[Ll]og/
*.log

# Visual Studio / VSCode
.vs/
.vscode/

# User-specific files
*.user
*.suo
*.userosscache
*.sln.docstates

# NuGet
*.nupkg
*.snupkg
project.lock.json
project.assets.json
artifacts/
packages/
*.nuget.props
*.nuget.targets
*.nuget.cache

# Rider
.idea/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# Mac-specific
.DS_Store

# Backup and temporary files
*.tmp
*.bak
*.swp
*~
# Bin√°rios de build
bin/
obj/

# Configura√ß√µes do Visual Studio / Rider / VS Code
.vs/
*.user
*.suo
*.userosscache
*.sln.docstates

# Arquivos de log
*.log

# Pacotes NuGet
*.nupkg
*.nuget.cache
project.assets.json

# Diret√≥rios de pacotes
packages/

# Cache de compila√ß√£o
*.AssemblyInfo.cs
*.AssemblyInfoInputs.cache
*.cache
*.editorconfig

# Outros
*.g.props
*.g.targets



# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
project.fragment.lock.json
artifacts/

*_i.c
*_p.c
*.i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspcc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
**/obj/
**/bin/
*.assets.cache
*.csproj.nuget.dgspec.json
*.csproj.nuget.g.props
*.csproj.nuget.g.targets
project.assets.json
project.nuget.cache

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspscc
*.sap

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user
# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
NCrunch*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# InstallShield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.Publish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets
/MigrationBackup/**

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
publishsettings
node_modules/
orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/
# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/_HTMLClient/GeneratedArtifacts
**/_DesktopClient/GeneratedArtifacts
**/_DesktopClient/ModelManifest.xml
**/_Server/GeneratedArtifacts
**/_Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml
# CodeRush
.cr/

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Wix Build Files
*.msi
*.wixpdb
*.dark.wxs
*.heat.wxs
*.reheat.wxs
*.wixobj
*.generated.xsl

**/logs/** 
*.stackdump

*.bak

# This is the default gitignore file provided by default when a git repository is
# in Odyssey. It includes common IDE settings files that generally should not be committed
# as well as the file extensions that are blocked by default in Odyssey (eg config files 
# and binaries)

# Version 1.2 - August 2018

# Common IDE settings files etc to ignore
.idea
.lws
*.iml
.ipr
.settings
.vs
local.properties
.user
.gradle

# Migrated repos - don‚Äôt want to add or accidently add back *.svn folder
.svn

# Logs and databases, generally shouldn‚Äôt be committed #
*.log
*.sqlite

# Build Artifacts
/out/
/target/
/build/
/packages/
/packages/
/Application/Obj/
/Debug/net7.0/
/Obj/

# These file extensions are blocked by default in Odyssey (as they are in 
*.exe
*.msi
*.7z
*.bz2
*.bin
*.class
*.com
*.dat
*.deb
*.dll
*.dmg
*.ear
*.exe
*.gz
*.iso
*.jar
*.lz
*.mdb
*.mp3
*.mp4
*.msi
*.msp
*.nupkg
*.o
*.ocx
*.pkg
*.pyc
*.rar
*.rpm
*.so
*.tar
*.tgz
*.war
*.wav
*.wim
*.xz
*.zip
# Ignorar pastas de build
**/obj/
**/bin/
*.assets.cache
*.csproj.nuget.dgspec.json
*.csproj.nuget.g.props
*.csproj.nuget.g.targets
project.assets.json
project.nuget.cache
bin/
obj/

# üîß Arquivos de cache do NuGet
*.nuget.dgspec.json
*.nuget.g.props
*.nuget.g.targets
project.assets.json
project.packagespec.json
project.nuget.cache

# ‚öôÔ∏è Arquivos de cache do Rider / IDE
*.DotSettings.user
*.idea/
*.suo
*.user
*.userosscache
*.sln.docstates
*.rider.project.*

# üîç Cache de compila√ß√£o
*.AssemblyInfo.cs
*.AssemblyInfoInputs.cache
*.GeneratedMSBuildEditorConfig.editorconfig
*.assets.cache
*.AssemblyReference.cache
